{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X-Top\\\\Documents\\\\app-coivd\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length //0\n  ?\n  /*#__PURE__*/\n  React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'ႁၼ်ၸိူဝ်ႉမႅင်:',\n        borderColor: 'blue',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          recovered\n        }) => recovered),\n        label: 'ယႃၶႅၼ်း',\n        borderColor: '#00FF00',\n        backgroundColor: 'rgba(255. 0, 0, 0.5)',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'လူႉတႆၢ',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255. 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }) : null;\n  console.log(confirmed, recovered, deaths);\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['ႁၼ်ၸိူဝ်ႉမႅင်:', 'ယႃၶႅၼ်း', 'လူႉတႆၢ'],\n      datasets: [{\n        label: 'people',\n        backgroundColor: ['rgb(143, 98, 231)', 'rgb(2, 255, 100)', 'rgb(255, 18, 16)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    option: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Current state in ${country}'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/X-Top/Documents/app-coivd/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","console","log","barChart","value","legend","display","title","text","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n       \r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length //0\r\n            ? (\r\n                <Line\r\n                    data={{ \r\n                        labels: dailyData.map(({date}) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({confirmed}) => confirmed),\r\n                            label: 'ႁၼ်ၸိူဝ်ႉမႅင်:',\r\n                            borderColor: 'blue',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({recovered}) =>recovered),\r\n                            label: 'ယႃၶႅၼ်း',\r\n                            borderColor: '#00FF00',\r\n                            backgroundColor: 'rgba(255. 0, 0, 0.5)',\r\n                            fill: true,\r\n                        },\r\n                        {\r\n                            data: dailyData.map(({deaths}) => deaths),\r\n                            label: 'လူႉတႆၢ',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgba(255. 0, 0, 0.5)',\r\n                            fill: true,\r\n                        }],\r\n                    }}\r\n                />) : null\r\n    );\r\n    \r\n    console.log(confirmed, recovered, deaths);\r\n\r\n    const barChart= (\r\n        confirmed \r\n        ? (\r\n            <Bar \r\n              data={{\r\n                labels :[ 'ႁၼ်ၸိူဝ်ႉမႅင်:', 'ယႃၶႅၼ်း', 'လူႉတႆၢ'], \r\n                datasets: [{\r\n                    label: 'people',\r\n                    backgroundColor: [\r\n                        'rgb(143, 98, 231)',\r\n                        'rgb(2, 255, 100)',\r\n                        'rgb(255, 18, 16)',\r\n                    ],\r\n                    data:[confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n\r\n              }}\r\n              option={{\r\n                  legend: {display: false},\r\n                  title: { display: true, text:'Current state in ${country}'},\r\n              }}\r\n            />\r\n        ): null\r\n    )\r\n\r\n    return (\r\n    <div className={styles.container}>\r\n        {country ? barChart :lineChart}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}